name: CI for Fakestore
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]



jobs:
  symfony:
    name: Symfonyfakestore
    # https://hub.docker.com/_/ubuntu/
    runs-on: ubuntu-latest
    env:
      APP_ENV: ${{secrets.APP_ENV}}
      APP_SECRET: ${{secrets.APP_SECRET}}
      DATABASE_URL: ${{secrets.DATABASE_URL}}
      COMPOSE_PROJECT_NAME: ${{secrets.COMPOSE_PROJECT_NAME}}
      REDIS_URL: ${{secrets.REDIS_URL}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_ROOT_PASSWORD: ${{secrets.DB_ROOT_PASSWORD}}
      MESSENGER_TRANSPORT_DSN: ${{secrets.MESSENGER_TRANSPORT_DSN}}
      MAILER_DSN: ${{secrets.MAILER_DSN}}
      MAILER_FROM: ${{secrets.MAILER_FROM}}
      RABBITMQ_USER: ${{secrets.RABBITMQ_USER}}
      RABBITMQ_PASSWORD: ${{secrets.RABBITMQ_PASSWORD}}
      JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
      JWT_PUBLIC_KEY: ${{secrets.JWT_PUBLIC_KEY}}
      JWT_PASSPHRASE: ${{secrets.JWT_PASSPHRASE}}
      CORS_ALLOW_ORIGIN: ${{secrets.CORS_ALLOW_ORIGIN}}
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['8.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP, extensions and composer with shivammathur/setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, pgsql dom, filter, gd, iconv, json, mbstring, amqp
        env:
          update: true

      - name: Check PHP Version
        run: php -v

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      ## â€”â€” JWT ðŸ’« â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
      - name: Generate the SSL keys
        run: APP_ENV=prod php bin/console lexik:jwt:generate-keypair
        env:
          APP_ENV: ${{secrets.APP_ENV}}
          APP_SECRET: ${{secrets.APP_SECRET}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          COMPOSE_PROJECT_NAME: ${{secrets.COMPOSE_PROJECT_NAME}}
          REDIS_URL: ${{secrets.REDIS_URL}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_ROOT_PASSWORD: ${{secrets.DB_ROOT_PASSWORD}}
          MESSENGER_TRANSPORT_DSN: ${{secrets.MESSENGER_TRANSPORT_DSN}}
          MAILER_DSN: ${{secrets.MAILER_DSN}}
          MAILER_FROM: ${{secrets.MAILER_FROM}}
          RABBITMQ_USER: ${{secrets.RABBITMQ_USER}}
          RABBITMQ_PASSWORD: ${{secrets.RABBITMQ_PASSWORD}}
          JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
          JWT_PUBLIC_KEY: ${{secrets.JWT_PUBLIC_KEY}}
          JWT_PASSPHRASE: ${{secrets.JWT_PASSPHRASE}}
          CORS_ALLOW_ORIGIN: ${{secrets.CORS_ALLOW_ORIGIN}}

      - name: Build docker Project
        run:  make dc_up

      - name: PHPCS fixer
        run: make php-cs-fixer
        env:
          APP_ENV: ${{secrets.APP_ENV}}
          APP_SECRET: ${{secrets.APP_SECRET}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          COMPOSE_PROJECT_NAME: ${{secrets.COMPOSE_PROJECT_NAME}}
          REDIS_URL: ${{secrets.REDIS_URL}}
          DB_USERNAME: ${{secrets.DB_USERNAME}}
          DB_PASSWORD: ${{secrets.DB_PASSWORD}}
          DB_ROOT_PASSWORD: ${{secrets.DB_ROOT_PASSWORD}}
          MESSENGER_TRANSPORT_DSN: ${{secrets.MESSENGER_TRANSPORT_DSN}}
          MAILER_DSN: ${{secrets.MAILER_DSN}}
          MAILER_FROM: ${{secrets.MAILER_FROM}}
          RABBITMQ_USER: ${{secrets.RABBITMQ_USER}}
          RABBITMQ_PASSWORD: ${{secrets.RABBITMQ_PASSWORD}}
          JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
          JWT_PUBLIC_KEY: ${{secrets.JWT_PUBLIC_KEY}}
          JWT_PASSPHRASE: ${{secrets.JWT_PASSPHRASE}}
          CORS_ALLOW_ORIGIN: ${{secrets.CORS_ALLOW_ORIGIN}}

